/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticateduserRouteRouteImport } from './routes/_authenticated/(user)/route'
import { Route as AuthAdminSignupRouteImport } from './routes/auth/admin/signup'
import { Route as AuthAdminLoginRouteImport } from './routes/auth/admin/login'
import { Route as AuthenticateduserOrdersRouteImport } from './routes/_authenticated/(user)/orders'
import { Route as AuthenticateduserExamsRouteImport } from './routes/_authenticated/(user)/exams'
import { Route as AuthenticateduserCertificatesRouteImport } from './routes/_authenticated/(user)/certificates'
import { Route as AuthenticatedadminDashboardRouteRouteImport } from './routes/_authenticated/(admin)/dashboard/route'
import { Route as AuthenticatedadminDashboardIndexRouteImport } from './routes/_authenticated/(admin)/dashboard/index'
import { Route as AuthenticatedadminDashboardOrdersRouteImport } from './routes/_authenticated/(admin)/dashboard/orders'
import { Route as AuthenticatedadminDashboardUsersIndexRouteImport } from './routes/_authenticated/(admin)/dashboard/users/index'
import { Route as AuthenticatedadminDashboardExamsIndexRouteImport } from './routes/_authenticated/(admin)/dashboard/exams/index'
import { Route as AuthenticatedadminDashboardExamsCreateExamRouteImport } from './routes/_authenticated/(admin)/dashboard/exams/create-exam'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticateduserRouteRoute = AuthenticateduserRouteRouteImport.update({
  id: '/(user)',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthAdminSignupRoute = AuthAdminSignupRouteImport.update({
  id: '/auth/admin/signup',
  path: '/auth/admin/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAdminLoginRoute = AuthAdminLoginRouteImport.update({
  id: '/auth/admin/login',
  path: '/auth/admin/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticateduserOrdersRoute = AuthenticateduserOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AuthenticateduserRouteRoute,
} as any)
const AuthenticateduserExamsRoute = AuthenticateduserExamsRouteImport.update({
  id: '/exams',
  path: '/exams',
  getParentRoute: () => AuthenticateduserRouteRoute,
} as any)
const AuthenticateduserCertificatesRoute =
  AuthenticateduserCertificatesRouteImport.update({
    id: '/certificates',
    path: '/certificates',
    getParentRoute: () => AuthenticateduserRouteRoute,
  } as any)
const AuthenticatedadminDashboardRouteRoute =
  AuthenticatedadminDashboardRouteRouteImport.update({
    id: '/(admin)/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedadminDashboardIndexRoute =
  AuthenticatedadminDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedadminDashboardRouteRoute,
  } as any)
const AuthenticatedadminDashboardOrdersRoute =
  AuthenticatedadminDashboardOrdersRouteImport.update({
    id: '/orders',
    path: '/orders',
    getParentRoute: () => AuthenticatedadminDashboardRouteRoute,
  } as any)
const AuthenticatedadminDashboardUsersIndexRoute =
  AuthenticatedadminDashboardUsersIndexRouteImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedadminDashboardRouteRoute,
  } as any)
const AuthenticatedadminDashboardExamsIndexRoute =
  AuthenticatedadminDashboardExamsIndexRouteImport.update({
    id: '/exams/',
    path: '/exams/',
    getParentRoute: () => AuthenticatedadminDashboardRouteRoute,
  } as any)
const AuthenticatedadminDashboardExamsCreateExamRoute =
  AuthenticatedadminDashboardExamsCreateExamRouteImport.update({
    id: '/exams/create-exam',
    path: '/exams/create-exam',
    getParentRoute: () => AuthenticatedadminDashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticateduserRouteRouteWithChildren
  '/dashboard': typeof AuthenticatedadminDashboardRouteRouteWithChildren
  '/certificates': typeof AuthenticateduserCertificatesRoute
  '/exams': typeof AuthenticateduserExamsRoute
  '/orders': typeof AuthenticateduserOrdersRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/admin/signup': typeof AuthAdminSignupRoute
  '/dashboard/orders': typeof AuthenticatedadminDashboardOrdersRoute
  '/dashboard/': typeof AuthenticatedadminDashboardIndexRoute
  '/dashboard/exams/create-exam': typeof AuthenticatedadminDashboardExamsCreateExamRoute
  '/dashboard/exams': typeof AuthenticatedadminDashboardExamsIndexRoute
  '/dashboard/users': typeof AuthenticatedadminDashboardUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticateduserRouteRouteWithChildren
  '/certificates': typeof AuthenticateduserCertificatesRoute
  '/exams': typeof AuthenticateduserExamsRoute
  '/orders': typeof AuthenticateduserOrdersRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/admin/signup': typeof AuthAdminSignupRoute
  '/dashboard/orders': typeof AuthenticatedadminDashboardOrdersRoute
  '/dashboard': typeof AuthenticatedadminDashboardIndexRoute
  '/dashboard/exams/create-exam': typeof AuthenticatedadminDashboardExamsCreateExamRoute
  '/dashboard/exams': typeof AuthenticatedadminDashboardExamsIndexRoute
  '/dashboard/users': typeof AuthenticatedadminDashboardUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/(user)': typeof AuthenticateduserRouteRouteWithChildren
  '/_authenticated/(admin)/dashboard': typeof AuthenticatedadminDashboardRouteRouteWithChildren
  '/_authenticated/(user)/certificates': typeof AuthenticateduserCertificatesRoute
  '/_authenticated/(user)/exams': typeof AuthenticateduserExamsRoute
  '/_authenticated/(user)/orders': typeof AuthenticateduserOrdersRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/admin/signup': typeof AuthAdminSignupRoute
  '/_authenticated/(admin)/dashboard/orders': typeof AuthenticatedadminDashboardOrdersRoute
  '/_authenticated/(admin)/dashboard/': typeof AuthenticatedadminDashboardIndexRoute
  '/_authenticated/(admin)/dashboard/exams/create-exam': typeof AuthenticatedadminDashboardExamsCreateExamRoute
  '/_authenticated/(admin)/dashboard/exams/': typeof AuthenticatedadminDashboardExamsIndexRoute
  '/_authenticated/(admin)/dashboard/users/': typeof AuthenticatedadminDashboardUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/certificates'
    | '/exams'
    | '/orders'
    | '/auth/admin/login'
    | '/auth/admin/signup'
    | '/dashboard/orders'
    | '/dashboard/'
    | '/dashboard/exams/create-exam'
    | '/dashboard/exams'
    | '/dashboard/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/certificates'
    | '/exams'
    | '/orders'
    | '/auth/admin/login'
    | '/auth/admin/signup'
    | '/dashboard/orders'
    | '/dashboard'
    | '/dashboard/exams/create-exam'
    | '/dashboard/exams'
    | '/dashboard/users'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/(user)'
    | '/_authenticated/(admin)/dashboard'
    | '/_authenticated/(user)/certificates'
    | '/_authenticated/(user)/exams'
    | '/_authenticated/(user)/orders'
    | '/auth/admin/login'
    | '/auth/admin/signup'
    | '/_authenticated/(admin)/dashboard/orders'
    | '/_authenticated/(admin)/dashboard/'
    | '/_authenticated/(admin)/dashboard/exams/create-exam'
    | '/_authenticated/(admin)/dashboard/exams/'
    | '/_authenticated/(admin)/dashboard/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthAdminLoginRoute: typeof AuthAdminLoginRoute
  AuthAdminSignupRoute: typeof AuthAdminSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/(user)': {
      id: '/_authenticated/(user)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticateduserRouteRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/auth/admin/signup': {
      id: '/auth/admin/signup'
      path: '/auth/admin/signup'
      fullPath: '/auth/admin/signup'
      preLoaderRoute: typeof AuthAdminSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/admin/login': {
      id: '/auth/admin/login'
      path: '/auth/admin/login'
      fullPath: '/auth/admin/login'
      preLoaderRoute: typeof AuthAdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/(user)/orders': {
      id: '/_authenticated/(user)/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AuthenticateduserOrdersRouteImport
      parentRoute: typeof AuthenticateduserRouteRoute
    }
    '/_authenticated/(user)/exams': {
      id: '/_authenticated/(user)/exams'
      path: '/exams'
      fullPath: '/exams'
      preLoaderRoute: typeof AuthenticateduserExamsRouteImport
      parentRoute: typeof AuthenticateduserRouteRoute
    }
    '/_authenticated/(user)/certificates': {
      id: '/_authenticated/(user)/certificates'
      path: '/certificates'
      fullPath: '/certificates'
      preLoaderRoute: typeof AuthenticateduserCertificatesRouteImport
      parentRoute: typeof AuthenticateduserRouteRoute
    }
    '/_authenticated/(admin)/dashboard': {
      id: '/_authenticated/(admin)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedadminDashboardRouteRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/(admin)/dashboard/': {
      id: '/_authenticated/(admin)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedadminDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedadminDashboardRouteRoute
    }
    '/_authenticated/(admin)/dashboard/orders': {
      id: '/_authenticated/(admin)/dashboard/orders'
      path: '/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof AuthenticatedadminDashboardOrdersRouteImport
      parentRoute: typeof AuthenticatedadminDashboardRouteRoute
    }
    '/_authenticated/(admin)/dashboard/users/': {
      id: '/_authenticated/(admin)/dashboard/users/'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof AuthenticatedadminDashboardUsersIndexRouteImport
      parentRoute: typeof AuthenticatedadminDashboardRouteRoute
    }
    '/_authenticated/(admin)/dashboard/exams/': {
      id: '/_authenticated/(admin)/dashboard/exams/'
      path: '/exams'
      fullPath: '/dashboard/exams'
      preLoaderRoute: typeof AuthenticatedadminDashboardExamsIndexRouteImport
      parentRoute: typeof AuthenticatedadminDashboardRouteRoute
    }
    '/_authenticated/(admin)/dashboard/exams/create-exam': {
      id: '/_authenticated/(admin)/dashboard/exams/create-exam'
      path: '/exams/create-exam'
      fullPath: '/dashboard/exams/create-exam'
      preLoaderRoute: typeof AuthenticatedadminDashboardExamsCreateExamRouteImport
      parentRoute: typeof AuthenticatedadminDashboardRouteRoute
    }
  }
}

interface AuthenticateduserRouteRouteChildren {
  AuthenticateduserCertificatesRoute: typeof AuthenticateduserCertificatesRoute
  AuthenticateduserExamsRoute: typeof AuthenticateduserExamsRoute
  AuthenticateduserOrdersRoute: typeof AuthenticateduserOrdersRoute
}

const AuthenticateduserRouteRouteChildren: AuthenticateduserRouteRouteChildren =
  {
    AuthenticateduserCertificatesRoute: AuthenticateduserCertificatesRoute,
    AuthenticateduserExamsRoute: AuthenticateduserExamsRoute,
    AuthenticateduserOrdersRoute: AuthenticateduserOrdersRoute,
  }

const AuthenticateduserRouteRouteWithChildren =
  AuthenticateduserRouteRoute._addFileChildren(
    AuthenticateduserRouteRouteChildren,
  )

interface AuthenticatedadminDashboardRouteRouteChildren {
  AuthenticatedadminDashboardOrdersRoute: typeof AuthenticatedadminDashboardOrdersRoute
  AuthenticatedadminDashboardIndexRoute: typeof AuthenticatedadminDashboardIndexRoute
  AuthenticatedadminDashboardExamsCreateExamRoute: typeof AuthenticatedadminDashboardExamsCreateExamRoute
  AuthenticatedadminDashboardExamsIndexRoute: typeof AuthenticatedadminDashboardExamsIndexRoute
  AuthenticatedadminDashboardUsersIndexRoute: typeof AuthenticatedadminDashboardUsersIndexRoute
}

const AuthenticatedadminDashboardRouteRouteChildren: AuthenticatedadminDashboardRouteRouteChildren =
  {
    AuthenticatedadminDashboardOrdersRoute:
      AuthenticatedadminDashboardOrdersRoute,
    AuthenticatedadminDashboardIndexRoute:
      AuthenticatedadminDashboardIndexRoute,
    AuthenticatedadminDashboardExamsCreateExamRoute:
      AuthenticatedadminDashboardExamsCreateExamRoute,
    AuthenticatedadminDashboardExamsIndexRoute:
      AuthenticatedadminDashboardExamsIndexRoute,
    AuthenticatedadminDashboardUsersIndexRoute:
      AuthenticatedadminDashboardUsersIndexRoute,
  }

const AuthenticatedadminDashboardRouteRouteWithChildren =
  AuthenticatedadminDashboardRouteRoute._addFileChildren(
    AuthenticatedadminDashboardRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticateduserRouteRoute: typeof AuthenticateduserRouteRouteWithChildren
  AuthenticatedadminDashboardRouteRoute: typeof AuthenticatedadminDashboardRouteRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticateduserRouteRoute: AuthenticateduserRouteRouteWithChildren,
  AuthenticatedadminDashboardRouteRoute:
    AuthenticatedadminDashboardRouteRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthAdminLoginRoute: AuthAdminLoginRoute,
  AuthAdminSignupRoute: AuthAdminSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
