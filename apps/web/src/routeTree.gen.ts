/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedUserIndexRouteImport } from './routes/_authenticated/user/index'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/admin/index'
import { Route as AuthAdminSignupRouteImport } from './routes/auth/admin/signup'
import { Route as AuthAdminLoginRouteImport } from './routes/auth/admin/login'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUserIndexRoute = AuthenticatedUserIndexRouteImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthAdminSignupRoute = AuthAdminSignupRouteImport.update({
  id: '/auth/admin/signup',
  path: '/auth/admin/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAdminLoginRoute = AuthAdminLoginRouteImport.update({
  id: '/auth/admin/login',
  path: '/auth/admin/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/admin/signup': typeof AuthAdminSignupRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/user': typeof AuthenticatedUserIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/admin/signup': typeof AuthAdminSignupRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/user': typeof AuthenticatedUserIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/admin/signup': typeof AuthAdminSignupRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/user/': typeof AuthenticatedUserIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/admin/login'
    | '/auth/admin/signup'
    | '/admin'
    | '/user'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/admin/login' | '/auth/admin/signup' | '/admin' | '/user'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/auth/admin/login'
    | '/auth/admin/signup'
    | '/_authenticated/admin/'
    | '/_authenticated/user/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthAdminLoginRoute: typeof AuthAdminLoginRoute
  AuthAdminSignupRoute: typeof AuthAdminSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/user/': {
      id: '/_authenticated/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AuthenticatedUserIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/auth/admin/signup': {
      id: '/auth/admin/signup'
      path: '/auth/admin/signup'
      fullPath: '/auth/admin/signup'
      preLoaderRoute: typeof AuthAdminSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/admin/login': {
      id: '/auth/admin/login'
      path: '/auth/admin/login'
      fullPath: '/auth/admin/login'
      preLoaderRoute: typeof AuthAdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedUserIndexRoute: typeof AuthenticatedUserIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
  AuthenticatedUserIndexRoute: AuthenticatedUserIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthAdminLoginRoute: AuthAdminLoginRoute,
  AuthAdminSignupRoute: AuthAdminSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
